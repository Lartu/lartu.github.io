{{ pagetitle Lartunet — Computing (legacy projects) }}
{{ favicon favicon.png }}
{{ descr Computing at lartunet }}

{{ include _header.coso }}

{{ title computing (legacy projects) }}

{{ bigimg camphoto_1903590565.jpg bw}}

{{ title index }}

::{{ Programming Languages -> computing.coso -> langs}}
::{{ Libraries -> computing.coso -> libs}}
::{{ General Software -> computing.coso -> software}}

{{ title nomenclature }}

In this page I use the (**†**) symbol to mark projects that are no longer
maintained (or, at least, that are no longer maintained by me). The other
projects here may receive updates in the future, but there's no guarantee.

{{ anchor langs }}
{{ title programming languages }}

{{ subtitle ldpl }}

{{ midimg ldpl-4.0-logo.png }}

{{ LDPL => https://www.ldpl-lang.org }} is a free, powerful, compiled, 
open-source programming language designed from the ground up to be 
excessively expressive, readable, fast and easy to learn. LDPL was 
designed to run on Unix systems, including AMD-64 Linux, macOS, ARMv8 
Linux, Android Termux and both Intel and PowerPC OS X (tested from 
Tiger 10.4 onwards). It even supports UTF-8 out of the box.
--
I originally designed LDPL as a parody language, inspired both by COBOL
and PHP, typically disliked languages{{ footnote Hating on COBOL and PHP 
seems to be a trend on the internet, much like hating on Hawaiian pizza. I do
enjoy these three things very much.}}, but it took some traction on its
own, so we kept developing it alongside wonderful contributors from all
over the world.

{{ subtitle polaris }}

{{ midimg polaris_image.png }}
(**†**) {{ polaris => https://github.com/Lartu/polaris }} is a stack-based,
concatenative, interpreted programming language with strings as its
only data type. It has been designed to be small in size and minimal
in language features. Polaris was conceived to run under Unix systems.
It has been written in C++98, so it can probably be compiled with any
C++ compiler out there.

{{ subtitle other programming languages}}

(**†**) {{ LAPL => https://github.com/lartu/lapl }}, a cozy and familiar scripting language written in C++
and Antlr4. With a dinosaur!
--
(**†**) {{ nari => https://github.com/lartu/nari }}, a stack-based, dynamically-typed scripting language.
--
(**†**) {{ LarBASIC => https://github.com/lartu/larbasic }}, a tiny BASIC interactive interpreter with 
string support.
--
(**†**) {{ malady => https://github.com/lartu/malady }}, an experimental but simple and elegant 
string-substitution based esolang.
--
(**†**) {{ cherryl => https://github.com/lartu/cherryl }}, a string-based, embeddable, minimal
concatenative programming language.
--
(**†**) {{ mauifish => https://github.com/lartu/mauifish }}, a robust and predictable compiled programming
language loosely based on COBOL syntax. It served as the basis for LDPL.
--
(**†**) {{ mastropiero => https://github.com/lartu/mastropiero }}, a little experimental 'compiler' that
turns source code into music.
--
(**†**) {{ htmlkoala => https://github.com/lartu/htmlkoala }}, an HTML preprocessor.
--
(**†**) {{ LBI => https://github.com/lartu/lbi }}, a Brainfuck Interpreter written in LDPL.


{{ anchor libs }}
{{ title programming libraries }}

{{ subtitle p5.clickable }}

{{ midimg p5.png }}

(**†**) {{ p5.clickable => https://github.com/Lartu/p5.clickable }}, a {{p5.js => http://p5js.org/}} library
that lets you create and customize buttons and assign event-based behaviours
to them. With p5.clickable you can create buttons and define what happens
when the user hovers over, clicks, releases or moves the cursor outside of
them.
--
__As far as I know__, p5.clickable is still being maintained, but I'm
no longer involved with the project on a regular basis.

{{ subtitle LDPL libraries }}

{{midimg ldplstd.png}}
{{ldpl-std => https://github.com/Lartu/ldpl-std}}, the LDPL Standard Library, a collection of LDPL
libraries that contain many useful pre-written statements for the LDPL
Programming Language that are not included in the base language.

{{midimg ldplurl.png}}
{{ ldpl-url-resolver => https://github.com/Lartu/ldpl-url-resolver}}, the LDPL URL Resolver Library,
is a super easy to use library for LDPL that helps you resolve URLs into their
respective IP addresses.

{{midimg ldplncurses.png}}
{{ldpl-ncurses => https://github.com/Lartu/ldpl-ncurses}}, the LDPL Ncurses Library is a ncurses
wrapper for LDPL, designed for creating terminal applications that require more
complex text user-interfaces than simple line-feeding. It aims to make it very
easy to move text across a console, change text colors, read user key-presses,
etc.

{{midimg ldpl-net-logo.png}}
{{ ldpl-net-server => https://github.com/Lartu/ldpl-net-server }}, the LDPL Network Server Library
is an library for creating socket based servers in LDPL. It aims to make it
very easy to develop, test and deploy network servers, with as little work as
possible.

{{midimg ldpl-irc-logo.png}}
{{ldpl-irc-bot => https://github.com/Lartu/ldpl-irc-bot}}, the LDPL IRC Bot Library is a super easy
to use IRC bot library for LDPL. It lets you write LDPL programs that connect
to IRC servers, join channels, send messages and react to received messages in
the simplest way possible.

{{ subtitle other libraries }}

(**†**) {{ ldpl-fltk => https://github.com/Lartu/ldpl-fltk }}, LDPL FLTK, a GUI library for the LDPL programming
language. It lets you create graphical user interfaces with maximum ease.
It is a simple FLTK wrapper designed to make GUI building easy to learn and to
extend.
--
{{ shibahug => https://github.com/Lartu/shibahug }}, a plug-and-Play PHP library that makes
interfacing PHP with MySQL as easy as pie.
--
(**†**) {{ cppregex => https://github.com/Lartu/cppregex }}, a very simple, single header file, easy to
use C++11 std::regex wrapper for lazy people who just want to use regex in C++
without having to mingle with std::regex boilerplate code. In other words, a
simple C++ regex library.
--
{{ cpptrim => https://github.com/Lartu/cpptrim }}, a simple trim function library for C++ strings
(removes leading and trailing whitespace from strings).
--
{{ lstring => https://github.com/Lartu/lstring }}, a simple, utf-8 string library for C++. It lets
you use strings like "你好，世界！" and index and substring them and take their
lengths.
--
(**†**) {{ chText => https://github.com/Lartu/chtext }}, a string library for C++ that provides the chText
type: a string type used just like regular C++ strings but with UTF-8 support.
The LDPL ``TEXT`` data-type is based on this library.


{{ anchor software }}
{{ title general software }}

{{ coralDB => https://github.com/Lartu/coraldb }}, an extremely simple and minimal in-memory
key-value database for distributed applications and microservices.
--
{{ starqueue => https://github.com/Lartu/starqueue }}, an extremely simple and minimal message
queue server for distributed applications and microservices.
--
{{ tmon => https://github.com/Lartu/tmon }}, the __[You]Tube Monitor__, is a tool to make
regular, local backups of your YouTube music playlists. It's pronounced
__te-mon__, with __te__ like in tetris and __mon__ like in monitor.
--
(**†**) {{ lute => https://github.com/Lartu/lute }}, Lartu's Utility for Text Editing, is a simple,
no-nonsense text editor for Unix and general *nix systems written in LDPL.
--
(**†**) {{ OpenNapkin => https://github.com/Lartu/opennapkin }}, a graphical Gopher client written in
{{ Gambas3 => http://gambas.sourceforge.net/en/main.html }}. I wrote OpenNapkin
because I wasn't able to find another Gopher
client that wasn't written only for console or that wasn't part of a much
bigger web-browsing suite.
--
{{ led => https://github.com/Lartu/led }}, the LDPL Text Editor, is a line text editor written in
LDPL, inspired by the ed and sed text editors, but friendlier!
--
(**†**) {{ explicartu => https://github.com/Lartu/explicartu }} is a tool for writing software reference
documentation. The documentation is written within code and compiled to an HTML
page that can be easily read.
--
(**†**) {{ mgit => https://github.com/Lartu/mgit }}, the Multicentralized Git Toolbox is a Git
frontend for mulicentralized Git operations. Essentially, mgit lets you pull
and push from multiple remote repositories at the same time with a single
command.
--
(**†**) {{ beKnowledge => https://github.com/Lartu/beknowledge }} is a tool designed to help you read
faster by letting you read without moving your eyes. beKnowledge shows you
words one after another in the same place at your choosen pace. It also gives
you pauses to blink and a pause every 1000 words so you can rest your eyes
and drink a sip of your coffee.
--
{{ ast => https://github.com/Lartu/ast }}, the average and sum tool, is a command line tool
designed to calculate the sum, mean, variance or standard deviation of lists
of numbers.
--
(**†**) {{ lartype => https://github.com/Lartu/lartype }} is a lightweight, LaTeX inspired markup document
editor.